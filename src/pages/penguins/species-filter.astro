---
import Layout from "../../layouts/Layout.astro";
---

<Layout>
  <section class="space-y-6">
    <header class="space-y-2">
      <p class="text-sm uppercase tracking-[0.35em] text-sky-400">Penguins</p>
      <h1 class="text-3xl font-semibold text-white">Filtre par espece</h1>
      <p class="max-w-2xl text-sm text-slate-300">
        Ajoute un select pour filtrer dynamiquement les points du graphique selon l'espece
        choisie.
      </p>
    </header>

    <div class="space-y-4 rounded-2xl border border-slate-800/80 bg-slate-900/60 p-6">
      <label class="block text-sm font-medium text-slate-200" for="species-select">Filtrer par espece</label>
      <select
        id="species-select"
        name="species"
        class="w-full rounded-lg border border-slate-700 bg-slate-950/60 px-3 py-2 text-sm text-white focus:border-sky-500 focus:outline-none"
      >
        <option value="">Toutes les especes</option>
        <option value="Adelie">Adelie</option>
        <option value="Chinstrap">Chinstrap</option>
        <option value="Gentoo">Gentoo</option>
      </select>

      <div class="overflow-hidden rounded-xl border border-slate-800/70 bg-slate-950/60 p-4">
        <div id="penguins-filter-plot" class="h-[440px] w-full"></div>
      </div>
    </div>
  </section>

  <script>
    import * as Plot from "@observablehq/plot";
    import penguins from "../../assets/penguins.json";

    const container = document.querySelector("#penguins-filter-plot");
    const select = document.querySelector("#species-select");

    function render() {
      const selected = select.value;
      const filtered = selected ? penguins.filter((d) => d.species === selected) : penguins;
      const width = container.clientWidth || 900;

      const plot = Plot.plot({
        width,
        height: 420,
        grid: true,
        color: {
          legend: true,
          label: "Espece"
        },
        marks: [
          Plot.dot(filtered, {
            x: "culmen_length_mm",
            y: "culmen_depth_mm",
            stroke: "species",
            title: (d) => `${d.species} (L: ${d.culmen_length_mm} mm / P: ${d.culmen_depth_mm} mm)`
          })
        ],
        x: {
          label: "Longueur du bec (mm)"
        },
        y: {
          label: "Profondeur du bec (mm)"
        }
      });

      container.replaceChildren(plot);
    }

    select.addEventListener("change", render);

    render();

    let resizeId;
    window.addEventListener("resize", () => {
      clearTimeout(resizeId);
      resizeId = setTimeout(render, 200);
    });
  </script>
</Layout>
